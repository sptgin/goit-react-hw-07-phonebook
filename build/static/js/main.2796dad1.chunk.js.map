{"version":3,"sources":["redux/actions.js","redux/reducer.js","redux/store.js","components/Section.js","components/ContactForm.js","components/Filter.js","components/ContactListItem.js","components/ContactsList.js","App.js","index.js"],"names":["addContact","createAction","delContact","setFilter","contactReducer","createReducer","state","payload","some","contact","name","toLowerCase","alert","filter","id","filterReducer","rootReducer","combineReducers","contacts","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","Section","title","children","className","ContactForm","useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","nameId","uuid","numberId","onSubmit","data","htmlFor","type","required","pattern","number","PropsType","func","isRequired","Filter","value","useSelector","onChange","event","target","ContactListItem","handleDelContact","onClick","prototype","PropTypes","string","onDeleteContact","ContactsList","toLocaleLowerCase","includes","console","log","map","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2796dad1.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add');\nexport const delContact = createAction('contacts/del');\nexport const setFilter = createAction('filter/set');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, delContact, setFilter } from './actions';\n\nconst initContact = [];\n\nconst contactReducer = createReducer(initContact, {\n  [addContact]: (state, { payload }) => {\n    const checkContact = state.some(\n      contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\n    );\n    if (checkContact) {\n      alert(`${payload.name} is already exists`);\n      return state;\n    } else {\n      return [...state, payload];\n    }\n  },\n  [delContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [setFilter]: (state, { payload }) => (state = payload),\n});\n\nconst rootReducer = combineReducers({\n  contacts: contactReducer,\n  filter: filterReducer,\n});\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport rootReducer from './reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'сontacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport './Section.css';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <div className=\"task__section\">\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropsType from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport './ContactForm.css';\nimport { useForm } from 'react-hook-form';\nimport { addContact } from '../redux/actions';\nimport { useDispatch } from 'react-redux';\n\nexport default function ContactForm() {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(addContact({ ...data, id: uuid() }));\n    reset();\n  };\n\n  let nameId = uuid();\n  let numberId = uuid();\n\n  return (\n    <form className=\"contacts__form\" onSubmit={handleSubmit(onSubmit)}>\n      <label className=\"contcts__form-label\" htmlFor={nameId}>\n        Name\n        <input\n          className=\"contcts__form-input\"\n          type=\"text\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          {...register('name', {\n            required: true,\n            pattern:\n              /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n          })}\n        />\n        {errors?.name?.type === 'required' && <p>This field is required</p>}\n        {errors?.name?.type === 'pattern' && (\n          <p>Alphabetical characters only</p>\n        )}\n      </label>\n      <label className=\"contcts__form-label\" htmlFor={numberId}>\n        Number\n        <input\n          className=\"contcts__form-input\"\n          type=\"tel\"\n          {...register('number', {\n            required: true,\n            pattern:\n              /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n          })}\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        />\n        {errors?.number?.type === 'required' && <p>This field is required</p>}\n        {errors?.number?.type === 'pattern' && <p>Numeric characters only</p>}\n      </label>\n      <button className=\"contacts__form-button\" type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.PropsType = {\n  onSubmit: PropsType.func.isRequired,\n};\n","import React from 'react';\nimport './Filter.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../redux/actions';\n\nexport default function Filter() {\n  const value = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <h3 className=\"filter__header\">Find contacts by name :</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        className=\"filter__input\"\n        onChange={event => dispatch(setFilter(event.target.value))}\n      />\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport './ContactListItem.css';\n\nexport default function ContactListItem({ contact, handleDelContact }) {\n  return (\n    <li className=\"contact__list-item\">\n      <div>\n        {contact.name}: {contact.number}\n      </div>\n      <button\n        className=\"contact__list-delete-button\"\n        type=\"submit\"\n        id={contact.id}\n        onClick={handleDelContact}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.prototype = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import ContactListItem from './ContactListItem';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { delContact } from '../redux/actions';\nimport './ContactsList.css';\n\nexport default function ContactsList({ handleDelContact }) {\n  const contacts = useSelector(state =>\n    state.contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(state.filter.toLowerCase()),\n    ),\n  );\n\n  console.log(contacts);\n\n  const dispatch = useDispatch();\n  return (\n    <ul className=\"contact__list\">\n      {contacts.map(contact => {\n        return (\n          <ContactListItem\n            className=\"contacts__list-item\"\n            key={contact.id}\n            contact={contact}\n            handleDelContact={() => dispatch(delContact(contact.id))}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n","import Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactsList from './components/ContactsList';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div>\n      <h1 className=\"header__main\">React HW 007 Phonebook</h1>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactsList />\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor} loading={null}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}